# Generated by Django 5.0.4 on 2024-05-13 21:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("companies", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Employee",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("address_line_1", models.CharField(blank=True, max_length=255, verbose_name="adresse")),
                (
                    "address_line_2",
                    models.CharField(
                        blank=True,
                        help_text="Appartement, suite, bloc, bâtiment, boite postale, etc.",
                        max_length=255,
                        verbose_name="complément d'adresse",
                    ),
                ),
                ("post_code", models.CharField(blank=True, max_length=5, verbose_name="code postal")),
                ("city", models.CharField(blank=True, max_length=255, verbose_name="ville")),
                ("label_id", models.IntegerField(verbose_name="id LABEL")),
                ("created_at", models.DateTimeField(null=True, verbose_name="date de création")),
                ("last_name", models.CharField(verbose_name="nom de famille")),
                ("first_name", models.CharField(verbose_name="prénom")),
                ("birthdate", models.DateField(verbose_name="date de naissance")),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Monsieur"), ("MME", "Madame")],
                        default="",
                        max_length=3,
                        verbose_name="civilité",
                    ),
                ),
                (
                    "qualification",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("SQ", "Sans qualification"),
                            ("N3", "Niveau 3 (CAP, BEP)"),
                            ("N4", "Niveau 4 (BP, Bac Général, Techno ou Pro, BT)"),
                            ("N5", "Niveau 5 ou + (Bac+2 ou +)"),
                        ],
                        default="",
                        verbose_name="niveau de qualification à l'entrée obtenu",
                    ),
                ),
                (
                    "prescriber_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DEMANDEUR_EMPLOI", "Demandeur d'emploi"),
                            ("PRESCRIPTEUR", "Prescripteur"),
                            ("EMPLOYEUR", "Employeur"),
                            ("AUTRE", "Autre"),
                        ],
                        default="",
                        verbose_name="type de prescripteur",
                    ),
                ),
                ("other_data", models.JSONField(verbose_name="autres données")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EmployeeContract",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("label_id", models.IntegerField(verbose_name="id LABEL")),
                ("start_at", models.DateField(verbose_name="date de début")),
                ("planned_end_at", models.DateField(verbose_name="date de fin prévisionnelle")),
                ("end_at", models.DateField(null=True, verbose_name="date de fin")),
                (
                    "nb_hours_per_week",
                    models.FloatField(blank=True, null=True, verbose_name="nombre d'heures par semaine"),
                ),
                (
                    "contract_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("CPRO", "Contrat de professionnalisation"),
                            ("CAPP", "Contrat d'apprentissage"),
                            ("CUI+F", "CUI (toute catégorie)"),
                            ("CDD+CPF", "CDD - CPF"),
                            ("CDD+autre", "CDD - Autre"),
                            ("Autre F", "Autre (avec formation)"),
                            ("CUI", "CUI (toute catégorie)"),
                            ("CDD", "CDD"),
                            ("CDI", "CDI"),
                            ("Autre SF", "Autre (sans formation)"),
                        ],
                        default="",
                        verbose_name="nature du contrat",
                    ),
                ),
                ("other_data", models.JSONField(verbose_name="autres données")),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="contracts", to="geiq.employee"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmployeePrequalification",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("label_id", models.IntegerField(verbose_name="id LABEL")),
                (
                    "action",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("AFPR", "AFPR"),
                            ("DISPOSITIF", "Dispositif régional ou sectoriel"),
                            ("POE", "POE"),
                            ("AUTRE", "Autre"),
                        ],
                        default="",
                        verbose_name="type d'action",
                    ),
                ),
                ("start_at", models.DateField(verbose_name="date de début")),
                ("end_at", models.DateField(verbose_name="date de fin")),
                ("training_hours_nb", models.PositiveIntegerField(verbose_name="nombre d'heures de formation")),
                ("other_data", models.JSONField(verbose_name="autres données")),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prequalifications",
                        to="geiq.employee",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ImplementationAssessment",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("address_line_1", models.CharField(blank=True, max_length=255, verbose_name="adresse")),
                (
                    "address_line_2",
                    models.CharField(
                        blank=True,
                        help_text="Appartement, suite, bloc, bâtiment, boite postale, etc.",
                        max_length=255,
                        verbose_name="complément d'adresse",
                    ),
                ),
                ("post_code", models.CharField(blank=True, max_length=5, verbose_name="code postal")),
                ("city", models.CharField(blank=True, max_length=255, verbose_name="ville")),
                ("year", models.IntegerField(verbose_name="année")),
                ("label_id", models.IntegerField(verbose_name="id LABEL")),
                ("last_synced_at", models.DateTimeField(null=True, verbose_name="dernière synchronisation à")),
                ("name", models.CharField(verbose_name="nom")),
                ("created_at", models.DateTimeField(null=True, verbose_name="date de création")),
                ("siret", models.CharField(blank=True, verbose_name="siret")),
                ("phone", models.CharField(blank=True, max_length=20, verbose_name="téléphone")),
                ("email", models.EmailField(blank=True, max_length=254, verbose_name="e-mail")),
                ("ffgeiq_member", models.BooleanField(verbose_name="adherent FFGEIQ")),
                ("other_data", models.JSONField(verbose_name="autres données")),
                ("company", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="companies.company")),
            ],
            options={
                "unique_together": {("year", "company"), ("year", "label_id")},
            },
        ),
        migrations.AddField(
            model_name="employee",
            name="geiq",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="employees",
                to="geiq.implementationassessment",
            ),
        ),
    ]
