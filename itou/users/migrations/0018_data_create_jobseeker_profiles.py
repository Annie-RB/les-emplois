# Generated by Django 4.1.9 on 2023-06-01 13:44

from django.db import migrations

from itou.users.enums import UserKind


# this value has been tested by hand to optimize the speed of our iterations.
# at the time of writing the total number of jobseekers to create is around 500_000.
# it is important that the migration is fast because it will both make Clever happy
# and we will avoid sync issues with concurrent save() that would also create JobSeekerProfiles.
QS_PAGINATION_SIZE = 10000


# optimized migration in order to be the fastest possible. About 30 seconds on my laptop.
def create_jobseeker_profiles(apps, _schema_editor):
    User = apps.get_model("users", "User")
    JobSeekerProfile = apps.get_model("users", "JobSeekerProfile")
    qs = User.objects.filter(kind=UserKind.JOB_SEEKER, jobseeker_profile__isnull=True).values_list("id", flat=True)
    for i in range(0, qs.count(), QS_PAGINATION_SIZE):
        profiles = []
        for user_id in qs[i : i + QS_PAGINATION_SIZE]:
            profiles.append(JobSeekerProfile(user_id=user_id))
        JobSeekerProfile.objects.bulk_create(profiles)


class Migration(migrations.Migration):
    atomic = False

    dependencies = [
        ("users", "0017_user_geocoded_label_user_geocoding_updated_at"),
    ]

    operations = [
        migrations.RunPython(create_jobseeker_profiles, reverse_code=migrations.RunPython.noop),
    ]
